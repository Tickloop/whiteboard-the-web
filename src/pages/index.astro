---
export const prerender = true;

import Layout from "~layouts/Layout.astro";
import Card from "~components/Card.astro";
import CtaLink from "~components/CtaLink.astro";
import VideoEmbed from "~components/Video.astro";
import Subscribe from "../components/Subscribe.astro";
import { getVideosWithThumbnail } from "../db";

const videos = await getVideosWithThumbnail();
---

<Layout title="#whiteboardtheweb" canonicalBase="" preconnectToYoutube={true}>
  <header>
    <h1 transition:name="heading" id="whiteboardtheweb__heading">
      #WhiteboardtheWeb
    </h1>
    <ul class="social-links" role="list">
      <li>
        <a
          target="_blank"
          rel="noreferrer"
          href="https://www.youtube.com/@bholmesdev">YouTube</a
        >
      </li>
      <li>
        <a
          target="_blank"
          rel="noreferrer"
          href="https://twitter.com/bholmesdev">Twitter</a
        >
      </li>
      <li>
        <a
          target="_blank"
          rel="noreferrer"
          href="https://tiktok.com/@bholmesdev">TikTok</a
        >
      </li>
    </ul>
  </header>
  <Subscribe />
  <main class="list">
    {
      videos.map(async (v) => {
        return (
          <Card title={v.title} permalink={v.slug} youtubeUrl={v.youtubeUrl}>
            {/* TODO: parse markdown*/}
            <div set:text={v.description} slot="body" />
            <VideoEmbed
              slot="video"
              title={v.title}
              id={v.id}
              embedUrl={v.embedUrl}
              thumbnails={v.thumbnails}
              hasColorIntersectionObserver
            />
          </Card>
        );
      })
    }
    <CtaLink href="https://twitter.com/hashtag/whiteboardtheweb?f=live">
      Explore full #whiteboardtheweb archive
    </CtaLink>
  </main>
</Layout>

<script>
  import { colorIntersectionObserver } from "~utils";

  // shift bg color back to heading color
  // when heading scrolls into view
  const heading = document.getElementById("whiteboardtheweb__heading");
  if (heading) {
    const isTopOfPageObserver = colorIntersectionObserver(heading);
    isTopOfPageObserver.observe(heading);
  }
</script>

<style>
  header {
    display: grid;
    margin-block: 2rem;
  }

  h1 {
    margin: 0;
    font-size: var(--font-size-xxl) !important;
    color: hsl(var(--color-hs), 20%) !important;
    text-align: center;
  }

  .social-links {
    padding: 0;
    list-style: none;
    display: flex;
    gap: 1rem;
    justify-content: center;
  }

  .social-links a,
  .social-links a:visited {
    color: hsl(var(--color-hs), 40%);
    text-decoration: none;
    font-weight: 700;
    transition: opacity 0.2s;
  }

  .social-links a:hover {
    opacity: 0.7;
  }

  .list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .list :global(article):nth-child(4n + 1) {
    --color: var(--orange);
    --color-hs: var(--orange-hs);
  }

  .list :global(article):nth-child(4n + 2) {
    --color: var(--green);
    --color-hs: var(--green-hs);
  }

  .list :global(article):nth-child(4n + 3) {
    --color: var(--pink);
    --color-hs: var(--pink-hs);
  }

  .list :global(article):nth-child(4n + 4) {
    --color: var(--purple);
    --color-hs: var(--purple-hs);
  }
</style>
